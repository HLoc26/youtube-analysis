services:
  postgres:
    image: postgres:17.5-bookworm
    container_name: youtube_postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?}
      - POSTGRES_USER=${POSTGRES_USER:?}
      - POSTGRES_DB=${POSTGRES_DB:?}
    volumes:
      - postgres_db_volume:/var/lib/postgresql/data
      # - ./init:/docker-entrypoint-initdb.d # Uncomment to load initialize query
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
    restart: always
    
  redis:
    image: redis:8.0.2-alpine # for smaller base image
    container_name: youtube_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 50
    restart: always

  localstack:
    image: localstack/localstack
    container_name: youtube_localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
    environment:
      # - LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN:?}
      - DEBUG=${DEBUG:-0}
      - PERSISTENCE=${PERSISTENCE:-0}
      - SERVICES=s3,iam # Use S3 and IAM
      - DOCKER_HOST=unix:///var/run/docker.sock
      # aws set up
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:?}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:?}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:?}
    volumes:
      - "~/.cache/localstack/volume:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  airflow-webserver:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.airflow
    container_name: youtube_airflow_web
    depends_on:
      - postgres
      - redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CELERY__BROKER_URL=${REDIS_CONN:?}
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${POSTGRES_DB_CONN:?}
      - AIRFLOW__CELERY__RESULT_BACKEND=${POSTGRES_DB_CONN:?}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY:-test}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_WEBSERVER_SECRET_KEY:-test}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false

      # Set up s3 localstack connection
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:?}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:?}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:?}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-http://localstack:4566}
      
      - AIRFLOW_ADMIN_USERNAME=${AIRFLOW_ADMIN_USERNAME:-admin}
      - AIRFLOW_ADMIN_FIRSTNAME=${AIRFLOW_ADMIN_FIRSTNAME:-admin}
      - AIRFLOW_ADMIN_LASTNAME=${AIRFLOW_ADMIN_LASTNAME:-admin}
      - AIRFLOW_ADMIN_EMAIL=${AIRFLOW_ADMIN_EMAIL:?}
      - AIRFLOW_ADMIN_PASSWORD=${AIRFLOW_ADMIN_PASSWORD:-admin}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./scripts:/opt/airflow/scripts
      - ./config:/opt/airflow/config
    entrypoint: ["/entrypoint.sh"]
    ports:
      - "8080:8080"
    restart: always
  airflow-scheduler:
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile.airflow
    container_name: youtube_airflow_scheduler
    command: scheduler
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      localstack:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${POSTGRES_DB_CONN:?}
      - AIRFLOW__CELERY__RESULT_BACKEND=${POSTGRES_DB_CONN:?}
      - AIRFLOW__CELERY__BROKER_URL=${REDIS_CONN:?}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY:-test}

      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:?}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:?}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:?}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-http://localstack:4566}

    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./scripts:/opt/airflow/scripts
      - ./config:/opt/airflow/config
    restart: always

  airflow-worker:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.airflow
    container_name: youtube_airflow_worker
    command: celery worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      localstack:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${POSTGRES_DB_CONN:?}
      - AIRFLOW__CELERY__RESULT_BACKEND=${POSTGRES_DB_CONN:?}
      - AIRFLOW__CELERY__BROKER_URL=${REDIS_CONN:?}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY:-test}

      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:?}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:?}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:?}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-http://localstack:4566}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./scripts:/opt/airflow/scripts
      - ./config:/opt/airflow/config
    restart: always
  spark-master:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.spark
    container_name: youtube_spark_master
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080" # Set to 9090 to avoid conflict with airflow's 8080 port
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

      # LocalStack S3 Configs
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:?}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:?}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:?}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-http://localstack:4566}
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ./data:/opt/spark-data
    restart: always
  spark-worker-1:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.spark
    container_name: youtube_spark_worker_1
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

      # LocalStack S3 Configs
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:?}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:?}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:?}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL:-http://localstack:4566}
    volumes:
      - ./spark-apps:/opt/spark-apps
      - ./data:/opt/spark-data
    restart: always


volumes:
  postgres_db_volume:

networks:
  default:
    name: youtube_pipeline_network