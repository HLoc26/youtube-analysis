version: '3.8'
services:
  postgres:
    image: postgres:17.5-bookworm
    container_name: youtube_postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?}
      - POSTGRES_USER=${POSTGRES_USER:?}
      - POSTGRES_DB=${POSTGRES_DB:?}
    volumes:
      - postgres_db_volume:/var/lib/postgresql/data
      # - ./init:/docker-entrypoint-initdb.d # Uncomment to load initialize query
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
    restart: always
    
  redis:
    image: redis:8.0.2-alpine # for smaller base image
    container_name: youtube_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 50
    restart: always

  localstack:
    image: localstack/localstack-pro
    container_name: youtube_localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
      - "443:443"              # LocalStack HTTPS Gateway (Pro)
    environment:
      - LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN:?}
      - DEBUG=${DEBUG:-0}
      - PERSISTENCE=${PERSISTENCE:-0}
      - SERVICES=s3,iam # Use S3 and IAM
      - DOCKER_HOST=unix:///var/run/docker.sock
      # aws set up
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:?}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:?}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:?}
    volumes:
      - "~/.cache/localstack/volume:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  # airflow-webserver:
  # airflow-scheduler:
  # airflow-worker:
  # pyspark-master:
  # pyspark-worker:


volumes:
  postgres_db_volume:

networks:
  default:
    name: youtube_pipeline_network